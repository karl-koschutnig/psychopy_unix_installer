name: reusable release creation

on:
  workflow_call:

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Update release from pre-release to full release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          INSTALLER_VERSION=$(grep -m1 '^# *Version:' psychopy_linux_installer | sed 's/^# *Version: *//')
          if [ -z "$INSTALLER_VERSION" ]; then
            echo "Failed to extract version from script."
            exit 1
          fi

          RELEASE_TAG="v${INSTALLER_VERSION}"
          API_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/tags/${RELEASE_TAG}"
          RESPONSE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" "$API_URL")
          RELEASE_ID=$(echo "$RESPONSE" | jq -r '.id')
          if [ -z "$RELEASE_ID" ] || [ "$RELEASE_ID" == "null" ]; then
            echo "Failed to retrieve release ID for tag ${RELEASE_TAG}"
            exit 1
          fi

          PATCH_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/${RELEASE_ID}"
          PATCH_RESPONSE=$(curl -s -X PATCH \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{"prerelease": false}' \
            "$PATCH_URL")
          if echo "$PATCH_RESPONSE" | grep -q '"id":'; then
            echo "Successfully updated release ${RELEASE_TAG} to a full release."
          else
            echo "Failed to update release."
            echo "Response: $PATCH_RESPONSE"
            exit 1
          fi